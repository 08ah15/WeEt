<?php

declare(strict_types=1);

use Fisharebest\Webtrees\I18N;
use Fisharebest\Webtrees\Registry;
use Fisharebest\Webtrees\Source;
use Fisharebest\Webtrees\Tree;
use Illuminate\Database\Capsule\Manager as DB;
use Illuminate\Database\Query\Expression;
use Illuminate\Database\Query\JoinClause;
use Illuminate\Support\Collection;

/**
 * @var Collection<int,Source> $sources
 * @var string                 $title
 * @var Tree                   $tree
 */

?>

<?php
/**
 * Fetch a list of individuals with specified Linked to a source
 *
 * @param Tree          $tree
 * @param Source        $src
 *
 * 
 */
function families(Tree $tree, source $src)
	{
	$fquery = DB::table('link')
	   -> where ('l_type', '=', 'SOUR')
      -> where ('l_file', '=', $tree -> id())
      -> where ('l_to', '=', $src -> xref())
      -> select ('l_from')
		-> get();

	foreach ($fquery as $fam){
		$a = substr(json_encode($fam),11,-2);
		$hquery = DB::table('link')
		   -> where ('l_type', '=', 'HUSB')
	      -> where ('l_file', '=', $tree -> id())
	      -> where ('l_from', '=', $a)
	      -> select ('l_to')
			-> get();		
		$husb = substr(json_encode($hquery),10,-3);
		$nhquery = DB::table('name')
	      -> where ('n_file', '=', $tree -> id())
	      -> where ('n_id', '=', $husb)
	      -> select ('n_full')
			-> get();
		$hfullname = substr(json_encode($nhquery),12,-3);
		
		$wquery = DB::table('link')
		   -> where ('l_type', '=', 'WIFE')
	      -> where ('l_file', '=', $tree -> id())
	      -> where ('l_from', '=', $a)
	      -> select ('l_to')
			-> get();
		$wife = substr(json_encode($wquery),10,-3);
		$nwquery = DB::table('name')
	      -> where ('n_type', '=', 'NAME')
	      -> where ('n_file', '=', $tree -> id())
	      -> where ('n_id', '=', $wife)
	      -> select ('n_full')
			-> get();
		$wfullname = substr(json_encode($nwquery),12,-3);
		
		if($hfullname<>"" || $wfullname<>""){
		echo mb_convert_encoding(implode(json_decode('["' . $hfullname . '"]')), 'ISO-8859-1', 'UTF-8');
		echo " + ";
		echo mb_convert_encoding(implode(json_decode('["' . $wfullname . '"]')), 'ISO-8859-1', 'UTF-8');
		echo "; ";		
		}


		
//		$query = DB::table('name')
//			->join('link', static function (JoinClause $join): void {
//	    			$join->on('l_from', '=', 'n_id');
//		         $join->on('l_file', '=', 'n_file');
//	    })
//		   -> where ('l_type', '=', 'HUSB')
//      	-> where ('l_file', '=', $tree -> id())
//	      -> where ('l_from', '=', 'X3161')
//   	   -> select ('n_full')
//			-> get();

//		echo $query;

//		$fullname = substr(json_encode($query),11,-2);
//		echo mb_convert_encoding(implode(json_decode('["' . $fullname . '"]')), 'ISO-8859-1', 'UTF-8');
//		echo ", ";
//		$query = DB::table('name')
//			->join('link', static function (JoinClause $join): void {
//	    			$join->on('l_from', '=', 'n_id');
//		         $join->on('l_file', '=', 'n_file');
//	    })
//		   -> where ('l_type', '=', 'WIFE')
//      	-> where ('l_file', '=', $tree -> id())
//	      -> where ('l_from', '=', $fam -> xref())
//   	   -> select ('n_full')
//			-> get();
//		$fullname = substr(json_encode($query[$i]),11,-2);
//		echo mb_convert_encoding(implode(json_decode('["' . $fullname . '"]')), 'ISO-8859-1', 'UTF-8');
		}
	}
 
?>

<h2 class="wt-page-title">
    <?= $title ?>
</h2>

<table
    class="table table-bordered table-sm wt-table-source datatables d-none"
        <?= view('lists/datatables-attributes') ?> 
    	  data-columns="<?= e(json_encode([
        ['type' => 'html'],
        null,
  		  null,
    ], JSON_THROW_ON_ERROR)) ?>"

    <caption class="visually-hidden">
        <?= $caption ?? I18N::translate('Sources') ?>
    </caption>

    <thead>
        <tr>
            <th><?= I18N::translate('Title') ?></th>
            <th class="d-none d-md-table-cell"><?= I18N::translate('Publication') ?></th>
            <th class="d-none d-md-table-cell"><?= I18N::translate('Families') ?></th>
        </tr>
    </thead>

    <tbody>
        <?php foreach ($sources as $source) : ?>
            <tr class="<?= $source->isPendingAddition() ? 'wt-new' : '' ?> <?= $source->isPendingDeletion() ? 'wt-old' : '' ?>">
                <!-- Title -->
                <td class="d-none d-md-table-cell"> 
                    <a href="<?= e($source->url()) ?>">
                        <?= $source->fullName() ?>
                    </a>
                </td>

                <!-- Publisher -->
                <td class="d-none d-md-table-cell">
                    <?= Registry::elementFactory()->make('SOUR:PUBL')->value($source->facts(['PUBL'])->isNotEmpty() ? $source->facts(['PUBL'])->first()->value() : '', $tree) ?>
                </td>

                <!-- Linked individual/family -->
                <td class="d-none d-md-table-cell"> 
<!--					 <td class="text-center" data-sort="<?= $count_individuals[$source->xref()] ?? 0 ?>"> -->
<!--                    	<?= $count_individuals[$source->xref()] ?? 0 ?> -->
        				<?php families($tree, $source); ?> 
                </td> 
            </tr>
        <?php endforeach ?>
    </tbody>
</table>
